# -*- coding: utf-8 -*-
"""Heart Disease

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DkymBA7lgZCnsgxC_EEZ-xjYfSGvelVO
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

heart_data = pd.read_csv('/content/sample_data/heart_disease_data (1).csv')

heart_data.head()

heart_data.shape

heart_data['target'].value_counts()

x = heart_data.drop(columns='target', axis=1)
y = heart_data['target']

print(x)

print(y)

x_train, x_test, y_train, y_test = train_test_split(x,y, test_size=0.2, stratify=y, random_state =2)

print(x.shape, x_train.shape, x_test.shape)

model = LogisticRegression()

model.fit(x_train, y_train)

x_train_prediction = model.predict(x_train)
training_data_accuracy = accuracy_score(x_train_prediction, y_train)

print('Accuracy of Training data :', training_data_accuracy)

x_test_prediction = model.predict(x_test)
testing_data_accuracy = accuracy_score(x_test_prediction, y_test)

print('Accuracy of Testing data :', testing_data_accuracy)

"""Making a Predictive System"""

input_data = (56,0,0,134,409,0,0,150,1,1.9,1,2,3)

input_data_as_numpy_array = np.asarray(input_data)

input_data_reshaped = input_data_as_numpy_array.reshape(1, -1)

prediction = model.predict(input_data_reshaped)
print(prediction)

if (prediction[0]==0):
  print('Person does not have Heart Disease')
else:
  print('Person has Heart Disease')

import pickle

filename = 'heart_model.sav'

pickle.dump(model, open(filename, 'wb'))

loaded_model = pickle.load(open('heart_model.sav', 'rb'))